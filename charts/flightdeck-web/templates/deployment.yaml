apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "flightdeck-web.fullname" . }}
  labels:
    {{- include "flightdeck-web.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "flightdeck-web.selectorLabels" . | nindent 6 }}
  {{- with .Values.strategy }}
  strategy:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  template:
    metadata:
      labels:
        {{- include "flightdeck-web.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "flightdeck-web.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- range . }}
        - name: {{ . }}
        {{- end }}
      {{- end }}
      {{- with .Values.hostAliases }}
      hostAliases:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: web
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ include "flightdeck-web.image" . }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.httpPort }}
              protocol: TCP
          {{- with .Values.env }}
          env:
              {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.envFrom }}
          envFrom:
              {{- toYaml . | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /config/web
              name: vol-config-flightdeck-web
          {{- if .Values.varnish.enabled }}
            - mountPath: /config/varnish-secret
              name: vol-secret-varnish-secret
          {{- end }}
          {{- if .Values.extraVolumeMounts }}
            {{- toYaml .Values.extraVolumeMounts | nindent 12 }}
          {{- end }}
      {{- if .Values.varnish.enabled }}
        - name: varnish
          securityContext:
            {{- toYaml .Values.varnish.securityContext | nindent 12 }}
          image: "{{ include "flightdeck-web.varnishImage" . }}"
          imagePullPolicy: {{ .Values.varnish.image.pullPolicy }}
          {{- with .Values.env }}
          env:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.envFrom }}
          envFrom:
              {{- toYaml . | nindent 12 }}
          {{- end }}
          ports:
            - name: varnish
              containerPort: {{ .Values.service.varnishPort }}
              protocol: TCP
          resources:
            {{- toYaml .Values.varnish.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /config/varnish
              name: vol-config-flightdeck-varnish
            - mountPath: /config/varnish-secret
              name: vol-secret-varnish-secret
      {{- end }}
      {{- if .Values.memcache.enabled }}
        - name: memcache
          securityContext:
            {{- toYaml .Values.memcache.securityContext | nindent 12 }}
          image: "{{ include "flightdeck-web.memcacheImage" . }}"
          imagePullPolicy: {{ .Values.memcache.image.pullPolicy }}
          {{- with .Values.env }}
          env:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.envFrom }}
          envFrom:
              {{- toYaml . | nindent 12 }}
          {{- end }}
          ports:
            - name: memcache
              containerPort: {{ .Values.memcache.config.port }}
              protocol: TCP
          resources:
            {{- toYaml .Values.memcache.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /config/memcache
              name: vol-config-flightdeck-memcache
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
        - name: vol-config-flightdeck-web
          configMap:
            name: '{{ template "flightdeck-web.fullname" . }}-config'
      {{- if .Values.varnish.enabled }}
        - name: vol-config-flightdeck-varnish
          configMap:
            name: '{{ template "flightdeck-web.fullname" . }}-varnish-config'
        - name: vol-secret-varnish-secret
          secret:
            secretName: '{{ include "flightdeck-web.fullname" . }}-varnish-secret'
      {{- end }}
      {{- if .Values.memcache.enabled }}
        - name: vol-config-flightdeck-memcache
          configMap:
            name: '{{ template "flightdeck-web.fullname" . }}-memcache-config'
      {{- end }}
      {{- if .Values.extraVolumes }}
        {{- toYaml .Values.extraVolumes | nindent 8 }}
      {{- end }}
